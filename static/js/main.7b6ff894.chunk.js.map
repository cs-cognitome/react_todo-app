{"version":3,"sources":["components/TodoList.js","components/TodoFilters.js","components/Footer.js","App.js","index.js"],"names":["TodoList","_ref","isAllChecked","todos","handleItemDestroyer","handleItemsCheck","handleCheckedAll","react_default","a","createElement","className","style","display","length","Fragment","type","id","checked","onChange","htmlFor","map","item","completed","onClick","title","TodoFilters","selectedFilterItem","setItemFilter","href","cn","selected","FILTER_TYPES","all","active","Footer","clearCompletedItems","filter","todo","components_TodoFilters","some","App","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inputText","counterId","getTodoId","currentId","setState","prevState","handleInputText","event","target","value","handleInputSubmit","preventDefault","toConsumableArray","addTodo","complited","itemId","handleItemsChecked","objectSpread2","every","filterTodoItems","inherits","createClass","key","filteredItems","onSubmit","placeholder","components_TodoList","components_Footer","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b6ff894.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({\n  isAllChecked,\n  todos,\n  handleItemDestroyer,\n  handleItemsCheck,\n  handleCheckedAll,\n}) => (\n\n  <section className=\"main\" style={{ display: 'block' }}>\n    {todos.length > 0 && (\n      <>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={isAllChecked}\n          onChange={() => handleCheckedAll(isAllChecked)}\n        />\n        {/*eslint-disable */\n        <label htmlFor=\"toggle-all\">Mark all as complete </label>\n        /* eslint-enable */}\n      </>\n    )}\n    <ul className=\"todo-list\">\n      {}\n      {todos.map(item => (\n        <li className=\"\">\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={item.completed}\n              onClick={() => handleItemsCheck(item.id)}\n            />\n\n            <label htmlFor=\"todo-1\">{item.title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => handleItemDestroyer(item.id)}\n            />\n          </div>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isAllChecked: PropTypes.func.isRequired,\n  handleItemDestroyer: PropTypes.func.isRequired,\n  handleItemsCheck: PropTypes.func.isRequired,\n  handleCheckedAll: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FILTER_TYPES } from '../App';\n\nconst TodoFilters = ({ selectedFilterItem, setItemFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        // работа с classnames через cn\n        className={cn({ selected: selectedFilterItem === 'all' })}\n        onClick={() => setItemFilter(FILTER_TYPES.all)}\n      >\n              All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={selectedFilterItem === 'active' ? 'selected' : ''}\n        onClick={() => setItemFilter(FILTER_TYPES.active)}\n      >\n              Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={selectedFilterItem === 'completed' ? 'selected' : ''}\n        onClick={() => setItemFilter(FILTER_TYPES.completed)}\n      >\n                Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilters.propTypes = {\n  selectedFilterItem: PropTypes.string.isRequired,\n  setItemFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoFilters from './TodoFilters';\n\nconst Footer = ({\n  todos,\n  clearCompletedItems,\n  selectedFilterItem,\n  setItemFilter,\n}) => (\n  <footer\n    className=\"footer\"\n    style={{ display: 'block' }}\n  >\n    <span className=\"todo-count\">\n          Items left:\n      {todos.filter(todo => (\n        !todo.completed\n      )).length}\n    </span>\n\n    <TodoFilters\n      selectedFilterItem={selectedFilterItem}\n      setItemFilter={setItemFilter}\n    />\n\n    {todos.some(item => item.completed) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={clearCompletedItems}\n      >\n          Clear Completed\n      </button>\n    )}\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedFilterItem: PropTypes.string.isRequired,\n  clearCompletedItems: PropTypes.func.isRequired,\n  setItemFilter: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nexport const FILTER_TYPES = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\nexport class App extends React.Component {\n    state = {\n      todos: [],\n      inputText: '',\n      counterId: 1,\n      selectedFilterItem: FILTER_TYPES.all,\n    }\n\n    getTodoId = () => {\n      const currentId = this.state.counterId;\n\n      this.setState(prevState => ({\n        counterId: prevState.counterId + 1,\n      }));\n\n      return currentId;\n    }\n\n    handleInputText = (event) => {\n      this.setState({\n        inputText: event.target.value,\n      });\n    }\n\n    handleInputSubmit = (event) => {\n      event.preventDefault();\n      this.setState(state => ({\n        inputText: '',\n        todos: [...state.todos, {\n          title: state.inputText,\n          completed: false,\n          id: this.getTodoId(),\n        }],\n      }));\n    }\n\n    addTodo = (id, title, complited) => {\n      this.setState(state => ({\n        todos: [\n          ...state.todos,\n          {\n            id, inputText: title, complited,\n          }],\n      }));\n    };\n\n    handleItemDestroyer = (itemId) => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.id !== itemId),\n      }));\n    };\n\n    handleItemsChecked = (itemId) => {\n      this.setState(state => ({\n        todos: state.todos.map((item) => {\n          if (item.id === itemId) {\n            return {\n              ...item,\n              completed: !item.completed,\n            };\n          }\n\n          return { ...item };\n        }),\n      }));\n    };\n\n    handleCheckedAll = (checked) => {\n      this.setState(state => ({\n        todos: state.todos.map(item => ({\n          ...item,\n          completed: !checked,\n        }\n        )),\n      }));\n    };\n\n    isAllChecked = () => this.state.todos.every(item => item.completed);\n\n    clearCompletedItems = () => {\n      this.setState(state => ({\n        todos: state.todos.filter(item => !item.completed),\n      }));\n    };\n\n    setItemFilter = (filter) => {\n      this.setState({\n        selectedFilterItem: filter,\n      });\n    };\n\n    filterTodoItems = () => {\n      const { all, active, completed } = FILTER_TYPES;\n      const { todos } = this.state;\n\n      switch (this.state.selectedFilterItem) {\n        case active:\n          return todos.filter(todo => !todo.completed);\n        case completed:\n          return todos.filter(todo => todo.completed);\n        case all:\n          return todos;\n        default:\n          return todos;\n      }\n    };\n\n    render() {\n      const filteredItems = this.filterTodoItems();\n      const isAllChecked = this.isAllChecked();\n\n      return (\n\n        <section className=\"todoapp\">\n          <form\n            className=\"header\"\n            onSubmit={this.handleInputSubmit}\n          >\n            <h1>todos</h1>\n\n            <input\n              value={this.state.inputText}\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleInputText}\n            />\n          </form>\n\n          <TodoList\n            todos={filteredItems}\n            handleItemDestroyer={this.handleItemDestroyer}\n            handleItemsCheck={this.handleItemsChecked}\n            filterTodoItems={this.filterTodoItems}\n            handleCheckedAll={this.handleCheckedAll}\n            isAllChecked={isAllChecked}\n          />\n\n          {this.state.todos.length !== 0 && (\n            <Footer\n              todos={filteredItems}\n              filterTodoItems={this.filterTodoItems}\n              selectedFilterItem={this.state.selectedFilterItem}\n              setItemFilter={this.setItemFilter}\n              clearCompletedItems={this.clearCompletedItems}\n            />\n          )}\n\n        </section>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}