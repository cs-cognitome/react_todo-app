{"version":3,"sources":["components/TodoList.js","components/TodoFilters.js","components/Footer.js","components/Header.js","App.js","index.js"],"names":["TodoList","_ref","todosLength","isAllChecked","todos","handleItemDestroyer","handleItemsCheck","handleCheckedAll","react_default","a","createElement","className","style","display","Fragment","type","id","checked","onChange","htmlFor","map","item","completed","onClick","title","TodoFilters","selectedFilterItem","setItemFilter","href","cn","selected","FILTER_TYPES","all","active","Footer","todosFooter","todosLeft","clearCompletedItems","components_TodoFilters","some","Header","state","inputText","handleInputText","event","_this","setState","target","value","handleInputSubmit","preventDefault","addTodo","props","this","onSubmit","placeholder","React","Component","App","_React$Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","counterId","getTodoId","currentId","prevState","toConsumableArray","complited","itemId","filter","todo","handleItemsChecked","objectSpread2","every","filterTodoItems","inherits","createClass","key","filteredItems","components_Header","components_TodoList","components_Footer","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6c2a52af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({\n  todosLength,\n  isAllChecked,\n  todos,\n  handleItemDestroyer,\n  handleItemsCheck,\n  handleCheckedAll,\n}) => (\n\n  <section className=\"main\" style={{ display: 'block' }}>\n    {todosLength && (\n      <>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={isAllChecked}\n          onChange={() => handleCheckedAll(isAllChecked)}\n        />\n        {/*eslint-disable */\n        <label htmlFor=\"toggle-all\">Mark all as complete </label>\n        /* eslint-enable */}\n      </>\n    )}\n    <ul className=\"todo-list\">\n      {}\n      {todos.map(item => (\n        <li className=\"\">\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={item.completed}\n              onClick={() => handleItemsCheck(item.id)}\n            />\n\n            <label htmlFor=\"todo-1\">{item.title}</label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => handleItemDestroyer(item.id)}\n            />\n          </div>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  todosLength: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isAllChecked: PropTypes.func.isRequired,\n  handleItemDestroyer: PropTypes.func.isRequired,\n  handleItemsCheck: PropTypes.func.isRequired,\n  handleCheckedAll: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FILTER_TYPES } from '../App';\n\nconst TodoFilters = ({ selectedFilterItem, setItemFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={cn({ selected: selectedFilterItem === 'all' })}\n        onClick={() => setItemFilter(FILTER_TYPES.all)}\n      >\n              All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={cn({ selected: selectedFilterItem === 'active' })}\n        onClick={() => setItemFilter(FILTER_TYPES.active)}\n      >\n              Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={cn({ selected: selectedFilterItem === 'completed' })}\n        onClick={() => setItemFilter(FILTER_TYPES.completed)}\n      >\n                Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilters.propTypes = {\n  selectedFilterItem: PropTypes.string.isRequired,\n  setItemFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoFilters from './TodoFilters';\n\nconst Footer = ({\n  todosFooter,\n  todosLeft,\n  clearCompletedItems,\n  selectedFilterItem,\n  setItemFilter,\n}) => (\n  <footer\n    className=\"footer\"\n    style={{ display: 'block' }}\n  >\n    <span className=\"todo-count\">\n      Items Left:\n      {' '}\n      {todosLeft}\n    </span>\n\n    <TodoFilters\n      selectedFilterItem={selectedFilterItem}\n      setItemFilter={setItemFilter}\n    />\n\n    {todosFooter.some(item => item.completed) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={clearCompletedItems}\n      >\n          Clear Completed\n      </button>\n    )}\n  </footer>\n);\n\nFooter.propTypes = {\n  todosFooter: PropTypes.arrayOf(PropTypes.object).isRequired,\n  todosLeft: PropTypes.number.isRequired,\n  selectedFilterItem: PropTypes.string.isRequired,\n  clearCompletedItems: PropTypes.func.isRequired,\n  setItemFilter: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    inputText: '',\n  };\n\n  handleInputText = (event) => {\n    this.setState({\n      inputText: event.target.value,\n    });\n  };\n\n  handleInputSubmit = (event) => {\n    event.preventDefault();\n    const { inputText } = this.state;\n    const { addTodo } = this.props;\n\n    addTodo(inputText);\n    this.setState({\n      inputText: '',\n    });\n  };\n\n  render() {\n    const { inputText } = this.state;\n\n    return (\n      <header className=\"header\">\n        <form\n          onSubmit={this.handleInputSubmit}\n        >\n          <h1>todos</h1>\n\n          <input\n            value={inputText}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleInputText}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes\n  = { addTodo: PropTypes.func.isRequired };\n\nexport default Header;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nexport const FILTER_TYPES = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\nexport class App extends React.Component {\n    state = {\n      todos: [],\n      counterId: 1,\n      selectedFilterItem: FILTER_TYPES.all,\n    }\n\n    getTodoId = () => {\n      const currentId = this.state.counterId;\n\n      this.setState(prevState => ({\n        counterId: prevState.counterId + 1,\n      }));\n\n      return currentId;\n    }\n\n    addTodo = (title) => {\n      this.setState(state => ({\n        todos: [\n          ...state.todos,\n          {\n            id: this.getTodoId(),\n            title,\n            complited: false,\n          }],\n      }));\n    };\n\n    handleItemDestroyer = (itemId) => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.id !== itemId),\n      }));\n    };\n\n    handleItemsChecked = (itemId) => {\n      this.setState(state => ({\n        todos: state.todos.map((item) => {\n          if (item.id === itemId) {\n            return {\n              ...item,\n              completed: !item.completed,\n            };\n          }\n\n          return item;\n        }),\n      }));\n    };\n\n    handleCheckedAll = (checked) => {\n      this.setState(state => ({\n        todos: state.todos.map(item => ({\n          ...item,\n          completed: !checked,\n        }\n        )),\n      }));\n    };\n\n    isAllChecked = () => this.state.todos.every(item => item.completed);\n\n    clearCompletedItems = () => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(item => !item.completed),\n      }));\n    };\n\n    setItemFilter = (filter) => {\n      this.setState({\n        selectedFilterItem: filter,\n      });\n    };\n\n    filterTodoItems = () => {\n      const { all, active, completed } = FILTER_TYPES;\n      const { todos } = this.state;\n\n      switch (this.state.selectedFilterItem) {\n        case active:\n          return todos.filter(todo => !todo.completed);\n        case completed:\n          return todos.filter(todo => todo.completed);\n        case all:\n          return todos;\n        default:\n          return todos;\n      }\n    };\n\n    render() {\n      const filteredItems = this.filterTodoItems();\n      const isAllChecked = this.isAllChecked();\n      const { todos } = this.state;\n\n      return (\n        <section className=\"todoapp\">\n          <form\n            className=\"header\"\n            onSubmit={this.handleInputSubmit}\n          >\n            <h1>todos</h1>\n            <Header addTodo={this.addTodo} />\n          </form>\n\n          <TodoList\n            todos={filteredItems}\n            todosLength={this.state.todos.length !== 0}\n            handleItemDestroyer={this.handleItemDestroyer}\n            handleItemsCheck={this.handleItemsChecked}\n            filterTodoItems={this.filterTodoItems}\n            handleCheckedAll={this.handleCheckedAll}\n            isAllChecked={isAllChecked}\n          />\n\n          {this.state.todos.length !== 0 && (\n            <Footer\n              todos={filteredItems}\n              todosFooter={this.state.todos}\n              todosLength={this.state.todos.length !== 0}\n              filterTodoItems={this.filterTodoItems}\n              selectedFilterItem={this.state.selectedFilterItem}\n              setItemFilter={this.setItemFilter}\n              clearCompletedItems={this.clearCompletedItems}\n              todosLeft={todos.filter(todo => !todo.completed).length}\n            />\n          )}\n        </section>\n      );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}